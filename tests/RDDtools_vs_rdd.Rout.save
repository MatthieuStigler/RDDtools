
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(rdd)
Loading required package: sandwich
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: AER
Loading required package: car
Loading required package: survival
Loading required package: splines
Loading required package: Formula
> library(RDDtools)
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009

RDDtools 0.22
PLEASE NOTE THIS is currently only a development version. 
Run vignette('RDDtools') for the documentation
> 
> set.seed(1234)
> x<-runif(1000,-1,1)
> cov<-rnorm(1000)
> y<-3+2*x+3*cov+10*(x>=0)+rnorm(1000)
> 
> RD <- RDDdata(x=x, y=y, cutpoint=0, covar=cov)
> 
> ### Simple estimation:
> bw <- IKbandwidth(X=x, Y=y, cutpoint=0)
> bw
[1] 0.6442702
> rdd_mod <- RDestimate(y~x, bw=bw, se.type="const", model=TRUE)$model[[1]]
> RDDtools_mod <- RDDreg_np(RD, bw=bw, inference="lm")
> 
> rdd_co <- coef(summary(rdd_mod))
> RDDtools_co <- RDDcoef(RDDtools_mod, allCo=TRUE, allInfo=TRUE)
> rdd_co
              Estimate Std. Error    t value      Pr(>|t|)
(Intercept)  2.3870103  0.3039002  7.8545857  1.670299e-14
Tr          10.8995093  0.4071983 26.7670789 7.187232e-107
Xl           0.3076565  1.1003584  0.2795966  7.798762e-01
Xr           1.0007232  1.0724028  0.9331599  3.510850e-01
> RDDtools_co
              Estimate Std. Error    t value      Pr(>|t|)
(Intercept)  2.3870103  0.3039002  7.8545857  1.670299e-14
D           10.8995093  0.4071983 26.7670789 7.187232e-107
x            0.3076565  1.1003584  0.2795966  7.798762e-01
x_right      0.6930668  1.5365013  0.4510681  6.520914e-01
> 
> all.equal(rdd_co[-4,], RDDtools_co[1:3,], check.attributes=FALSE)
[1] TRUE
> all.equal(rdd_co[4,1], sum(RDDtools_co[3:4,1]), check.attributes=FALSE)
[1] TRUE
> 
> 
> ### Covariate estimation:
> rdd_mod_cov <- RDestimate(y~x|cov, kernel="rectangular", bw=5, model=TRUE, se.type="const")$model[[1]]
> RDDtools_mod_cov <- RDDreg_lm(RD, bw=5, covariates="cov", covar.opt=list(slope="separate"))
> 
> rdd_co_cov <- coef(summary(rdd_mod_cov))
> RDDtools_co_cov <- RDDcoef(RDDtools_mod_cov, allCo=TRUE, allInfo=TRUE)
> rdd_co_cov
               Estimate Std. Error    t value      Pr(>|t|)
(Intercept)  2.90737195 0.09660411 30.0957385 5.649434e-142
Tr          10.20606095 0.13062887 78.1302094  0.000000e+00
Xl           1.81515024 0.16640546 10.9079970  3.027120e-26
Xr           1.86396889 0.15068992 12.3695656  8.602692e-33
cov          3.04154403 0.05189778 58.6064361  0.000000e+00
Tr:cov      -0.03728164 0.06948406 -0.5365496  5.916988e-01
> RDDtools_co_cov
               Estimate Std. Error    t value      Pr(>|t|)
(Intercept)  2.90737195 0.09660411 30.0957385 5.649434e-142
D           10.20606095 0.13062887 78.1302094  0.000000e+00
x            1.81515024 0.16640546 10.9079970  3.027120e-26
x_right      0.04881865 0.22449550  0.2174594  8.278950e-01
cov          3.04154403 0.05189778 58.6064361  0.000000e+00
`cov:D`     -0.03728164 0.06948406 -0.5365496  5.916988e-01
> 
> all.equal(rdd_co_cov[-4,], RDDtools_co_cov[-4,], check.attributes=FALSE)
[1] TRUE
> 
> ## Fuzzy
> set.seed(123)
> selec <- rbinom(nrow(RD), 1, prob=ifelse(RD$x<0, 0.1, 0.9))
> RD_rdd_ins <- RDDdata(y=RD$y, x=RD$x, z=selec,cutpoint=0)
> 
> RDDto_reg_fuz <- RDDreg_lm(RD_rdd_ins, bw=0.2)
> rdd_reg_fuz <- RDestimate(y~x+selec, data=RD_rdd_ins, kernel="rectangular", bw=0.2, model=TRUE, se.type="const")$model[[2]][[1]]
> 
> all.equal(RDDcoef(RDDto_reg_fuz),coef(summary(rdd_reg_fuz))[2,1])
[1] TRUE
> all.equal(RDDcoef(RDDto_reg_fuz, allCo=TRUE)[1:3],coef(summary(rdd_reg_fuz))[1:3,1], check.attributes=FALSE)
[1] TRUE
> 
> 
> proc.time()
utilisateur     système      écoulé 
      1.248       0.076       1.325 
