
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(RDDtools)
Loading required package: AER
Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: sandwich
Loading required package: survival
Loading required package: splines
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009

RDDtools 0.22
PLEASE NOTE THIS is currently only a development version. 
Run vignette('RDDtools') for the documentation
> 
> 
> 
> 
> ############################################
> ### STEP 0: Data Manipulation
> ############################################
> data(Lee2008)
> head(Lee2008)
        x      y
1  0.1049 0.5810
2  0.1393 0.4611
3 -0.0736 0.5434
4  0.0868 0.5846
5  0.3994 0.5803
6  0.1681 0.6244
> 
> Lee2008_rdd <- RDDdata(y=Lee2008$y, x=Lee2008$x, cutpoint=0)
> 
> head(Lee2008_rdd)
        x      y
1  0.1049 0.5810
2  0.1393 0.4611
3 -0.0736 0.5434
4  0.0868 0.5846
5  0.3994 0.5803
6  0.1681 0.6244
> 
> summary(Lee2008_rdd)
### RDDdata object ###

Cutpoint: 0 
Sample size: 
	-Full : 6558 
	-Left : 2740 
	-Right: 3818
Covariates: no 
> 
> ## With covariates
> 
> n_Lee <- nrow(Lee2008)
> 
> set.seed(123)
> Z<- data.frame(z1=rnorm(n_Lee), z2=rnorm(n_Lee, mean=20, sd=2), z3=sample(letters[1:3], size=n_Lee, replace=TRUE))
> Lee2008_rdd_z <- RDDdata(y=Lee2008$y, x=Lee2008$x, covar=Z,cutpoint=0)
> 
> head(Lee2008_rdd_z )
        x      y          z1       z2 z3
1  0.1049 0.5810 -0.56047565 22.19827  a
2  0.1393 0.4611 -0.23017749 20.63967  a
3 -0.0736 0.5434  1.55870831 20.66365  a
4  0.0868 0.5846  0.07050839 19.47992  c
5  0.3994 0.5803  0.12928774 20.19964  a
6  0.1681 0.6244  1.71506499 20.01448  c
> summary(Lee2008_rdd_z )
### RDDdata object ###

Cutpoint: 0 
Sample size: 
	-Full : 6558 
	-Left : 2740 
	-Right: 3818
Covariates: yes 
> 
> ### Fuzzy
> set.seed(123)
> ins <- rbinom(n_Lee, 1, prob=ifelse(Lee2008$x<0, 0.1, 0.9))
> Lee2008_rdd_ins <- RDDdata(y=Lee2008$y, x=Lee2008$x, z=ins,cutpoint=0)
> table(Lee2008$x<0, ins==0)
       
        FALSE TRUE
  FALSE  3474  344
  TRUE    283 2457
> 
> ############################################
> ### STEP 2: Graphical inspection
> ############################################
> 
> ### Plot 
> plot(Lee2008_rdd)
> plot(Lee2008_rdd, nplot=3, h=c(0.02, 0.03, 0.04))
> plot(Lee2008_rdd, nplot=1, h=0.1)
> 
> plot(Lee2008_rdd, xlim=c(-0.5, 0.5))
> 
> # plot(Lee2008_rdd, xlim=c(-0.5, 0.5), type="ggplot")
> 
> 
> ############################################
> ### STEP 2: Regression
> ############################################
> 
> ## few bandwidths:
> RDDbw_RSW(Lee2008_rdd)
[1] 0.03863514
> RDDbw_IK(Lee2008_rdd)
    h_opt 
0.2938561 
> 
> 
> ###### Parametric regression ######
> # Simple polynomial of order 1:
> reg_para <- RDDreg_lm(RDDobject=Lee2008_rdd)
> print(reg_para)
### RDD regression: parametric ###
	Polynomial order:  1 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
   Estimate Std. Error t value  Pr(>|t|)    
D 0.1182314  0.0056799  20.816 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.89406 -0.06189  0.00231  0.07129  0.86396 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.432948   0.004276 101.254  < 2e-16 ***
D           0.118231   0.005680  20.816  < 2e-16 ***
x           0.296906   0.011546  25.714  < 2e-16 ***
x_right     0.045978   0.013501   3.405 0.000665 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1384 on 6554 degrees of freedom
Multiple R-squared: 0.6707,	Adjusted R-squared: 0.6706 
F-statistic:  4450 on 3 and 6554 DF,  p-value: < 2.2e-16 

> plot(reg_para)
> 
> all.equal(unlist(RDDpred(reg_para)), RDDcoef(reg_para, allInfo=TRUE)[1:2], check.attributes=FALSE)
[1] TRUE
> 
> ## Difference in means regression:
> # Simple polynomial of order 0:
> reg_para_0 <- RDDreg_lm(RDDobject=Lee2008_rdd, order=0)
> print(reg_para_0)
### RDD regression: parametric ###
	Polynomial order:  0 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
   Estimate Std. Error t value  Pr(>|t|)    
D 0.3513582  0.0041954  83.748 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para_0)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.69788 -0.10061 -0.00360  0.09631  0.65348 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.346522   0.003201  108.25   <2e-16 ***
D           0.351358   0.004195   83.75   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1676 on 6556 degrees of freedom
Multiple R-squared: 0.5169,	Adjusted R-squared: 0.5168 
F-statistic:  7014 on 1 and 6556 DF,  p-value: < 2.2e-16 

> plot(reg_para_0)
> 
> 
> ## Simple polynomial of order 4:
> reg_para4 <- RDDreg_lm(RDDobject=Lee2008_rdd, order=4)
> reg_para4
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
  Estimate Std. Error t value  Pr(>|t|)    
D 0.076590   0.013239  5.7851 7.582e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> plot(reg_para4)
> all.equal(unlist(RDDpred(reg_para4)), RDDcoef(reg_para4, allInfo=TRUE)[1:2], check.attributes=FALSE)
[1] TRUE
> 
> ## Restrict sample to bandwidth area:
> bw_ik <- RDDbw_IK(Lee2008_rdd)
> reg_para_ik <- RDDreg_lm(RDDobject=Lee2008_rdd, bw=bw_ik, order=4)
> reg_para_ik
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Coefficient:
  Estimate Std. Error t value Pr(>|t|)   
D 0.059164   0.020596  2.8726 0.004098 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> plot(reg_para_ik)
> 
> all.equal(unlist(RDDpred(reg_para_ik)), RDDcoef(reg_para_ik, allInfo=TRUE)[1:2], check.attributes=FALSE)
[1] TRUE
> 
> ## Fuzzy reg
> reg_para_fuzz <- RDDreg_lm(Lee2008_rdd_ins)
> coef(reg_para_fuzz)
(Intercept)           D           x     x_right 
 0.41796288  0.14755375  0.29778248  0.04266442 
> summary(reg_para_fuzz)

Call:
ivreg(formula = y ~ . - ins | . - D, data = dat_step1, weights = weights)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.905964 -0.070958  0.004881  0.080950  0.879820 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.417963   0.005074  82.375  < 2e-16 ***
D           0.147554   0.007430  19.860  < 2e-16 ***
x           0.297782   0.012076  24.659  < 2e-16 ***
x_right     0.042664   0.014113   3.023  0.00251 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.145 on 6554 degrees of freedom
Multiple R-Squared: 0.6383,	Adjusted R-squared: 0.6381 
Wald test:  4051 on 3 and 6554 DF,  p-value: < 2.2e-16 

> 
> ## Covariates:
> reg_para4_cov <- RDDreg_lm(RDDobject=Lee2008_rdd_z, order=4, covariates=".")
> reg_para4_cov
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
  Estimate Std. Error t value  Pr(>|t|)    
D 0.076414   0.013244  5.7697 8.302e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para4_cov)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.87348 -0.06105  0.00116  0.06744  0.71549 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.4459926  0.0193546  23.043  < 2e-16 ***
D            0.0764143  0.0132440   5.770 8.30e-09 ***
x            0.5274483  0.1580923   3.336 0.000854 ***
`x^2`        1.5439437  0.7411612   2.083 0.037277 *  
`x^3`        4.2383627  1.2489711   3.393 0.000694 ***
`x^4`        3.0522056  0.6642910   4.595 4.42e-06 ***
x_right      0.0154044  0.2092056   0.074 0.941305    
`x^2_right` -2.2468013  0.9487628  -2.368 0.017907 *  
`x^3_right` -3.0056391  1.5522889  -1.936 0.052879 .  
`x^4_right` -3.7808696  0.8093116  -4.672 3.05e-06 ***
z1          -0.0003927  0.0016820  -0.233 0.815420    
z2           0.0005547  0.0008365   0.663 0.507323    
z3b         -0.0049158  0.0040657  -1.209 0.226671    
z3c         -0.0032098  0.0041445  -0.774 0.438673    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1357 on 6544 degrees of freedom
Multiple R-squared: 0.6839,	Adjusted R-squared: 0.6833 
F-statistic:  1089 on 13 and 6544 DF,  p-value: < 2.2e-16 

> 
> reg_para4_cov_slSep <- RDDreg_lm(RDDobject=Lee2008_rdd_z, order=4, covariates=".", covar.opt=list(slope="separate"))
> summary(reg_para4_cov_slSep)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.87319 -0.06121  0.00152  0.06788  0.71590 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.4467816  0.0275921  16.192  < 2e-16 ***
D            0.0744082  0.0365414   2.036 0.041763 *  
x            0.5314429  0.1581582   3.360 0.000783 ***
`x^2`        1.5607299  0.7414043   2.105 0.035321 *  
`x^3`        4.2599536  1.2492983   3.410 0.000654 ***
`x^4`        3.0604662  0.6644491   4.606 4.18e-06 ***
x_right      0.0128643  0.2092782   0.061 0.950987    
`x^2_right` -2.2682981  0.9489665  -2.390 0.016864 *  
`x^3_right` -3.0229759  1.5528584  -1.947 0.051611 .  
`x^4_right` -3.7900473  0.8094190  -4.682 2.89e-06 ***
z1          -0.0019210  0.0025907  -0.741 0.458419    
z2           0.0007586  0.0012911   0.588 0.556863    
z3b         -0.0144320  0.0062796  -2.298 0.021580 *  
z3c         -0.0076795  0.0064097  -1.198 0.230918    
`z1:D`       0.0025846  0.0034062   0.759 0.448015    
`z2:D`      -0.0003170  0.0016953  -0.187 0.851664    
`z3b:D`      0.0163160  0.0082404   1.980 0.047745 *  
`z3c:D`      0.0077248  0.0084028   0.919 0.357967    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1357 on 6540 degrees of freedom
Multiple R-squared: 0.6841,	Adjusted R-squared: 0.6833 
F-statistic: 833.1 on 17 and 6540 DF,  p-value: < 2.2e-16 

> RDDpred(reg_para4_cov_slSep)
$fit
        2 
0.0744082 

$se.fit
[1] 0.03654137

> RDDpred(reg_para4_cov_slSep, covdata=data.frame(z1=c(0, 0.2, 0.2), z2=c(0,20,20), z3b=c(0,1,0), z3c=c(0,0,1)))
$fit
[1] 0.0744082 0.0849006 0.0763094

$se.fit
[1] 0.03654137 0.01406868 0.01412509

> 
> 
> reg_para4_cov_startR <- RDDreg_lm(RDDobject=Lee2008_rdd_z, order=4, covariates=".", covar.opt=list(strategy="residual"))
> reg_para4_cov_startR
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
  Estimate Std. Error t value  Pr(>|t|)    
D 0.076400   0.013238  5.7713 8.225e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para4_cov_startR)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.87278 -0.06132  0.00093  0.06743  0.71605 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) -0.096767   0.009724  -9.951  < 2e-16 ***
D            0.076400   0.013238   5.771 8.22e-09 ***
x            0.526732   0.158000   3.334 0.000862 ***
`x^2`        1.542016   0.740778   2.082 0.037416 *  
`x^3`        4.237801   1.248388   3.395 0.000691 ***
`x^4`        3.053121   0.663993   4.598 4.34e-06 ***
x_right      0.017573   0.209092   0.084 0.933026    
`x^2_right` -2.251672   0.948170  -2.375 0.017589 *  
`x^3_right` -2.994779   1.551609  -1.930 0.053636 .  
`x^4_right` -3.786702   0.808771  -4.682 2.90e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1356 on 6548 degrees of freedom
Multiple R-squared: 0.6838,	Adjusted R-squared: 0.6834 
F-statistic:  1574 on 9 and 6548 DF,  p-value: < 2.2e-16 

> 
> plot(reg_para4_cov)
> 
> reg_para4_cov_startR_sl2 <- RDDreg_lm(RDDobject=Lee2008_rdd_z, order=4, covariates=".", covar.opt=list(strategy="residual", slope="separate"))
> summary(reg_para4_cov_startR_sl2)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.87001 -0.06145  0.00138  0.06728  0.71762 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.108148   0.009721  11.125  < 2e-16 ***
D           -0.275377   0.013234 -20.808  < 2e-16 ***
x            0.534391   0.157954   3.383 0.000721 ***
`x^2`        1.574893   0.740561   2.127 0.033489 *  
`x^3`        4.282174   1.248022   3.431 0.000605 ***
`x^4`        3.071545   0.663799   4.627 3.78e-06 ***
x_right      0.011154   0.209031   0.053 0.957445    
`x^2_right` -2.286510   0.947892  -2.412 0.015884 *  
`x^3_right` -3.042340   1.551154  -1.961 0.049882 *  
`x^4_right` -3.801129   0.808534  -4.701 2.64e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1356 on 6548 degrees of freedom
Multiple R-squared: 0.3453,	Adjusted R-squared: 0.3444 
F-statistic: 383.7 on 9 and 6548 DF,  p-value: < 2.2e-16 

> 
> reg_para4_cov_2 <- RDDreg_lm(RDDobject=Lee2008_rdd_z, order=4, covariates="z3+I(z1^2)")
> reg_para4_cov_2
### RDD regression: parametric ###
	Polynomial order:  4 
	Slopes:  separate 
	Number of obs: 6558 (left: 2740, right: 3818)

	Coefficient:
  Estimate Std. Error t value  Pr(>|t|)    
D 0.076407   0.013244  5.7691 8.331e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_para4_cov_2)

Call:
lm(formula = y ~ ., data = dat_step1, weights = weights)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.87470 -0.06066  0.00094  0.06743  0.71537 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.4574160  0.0101073  45.256  < 2e-16 ***
D            0.0764072  0.0132441   5.769 8.33e-09 ***
x            0.5262757  0.1580735   3.329 0.000875 ***
`x^2`        1.5416896  0.7411354   2.080 0.037549 *  
`x^3`        4.2382250  1.2489588   3.393 0.000694 ***
`x^4`        3.0532625  0.6642844   4.596 4.38e-06 ***
x_right      0.0187563  0.2091417   0.090 0.928543    
`x^2_right` -2.2565435  0.9490378  -2.378 0.017449 *  
`x^3_right` -2.9839277  1.5519657  -1.923 0.054564 .  
`x^4_right` -3.7936046  0.8094722  -4.687 2.84e-06 ***
z3b         -0.0049255  0.0040650  -1.212 0.225675    
z3c         -0.0032074  0.0041431  -0.774 0.438863    
`I(z1^2)`   -0.0004387  0.0011923  -0.368 0.712926    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1357 on 6545 degrees of freedom
Multiple R-squared: 0.6839,	Adjusted R-squared: 0.6833 
F-statistic:  1180 on 12 and 6545 DF,  p-value: < 2.2e-16 

> 
> ###### Non-parametric regression ######
> reg_nonpara <- RDDreg_np(RDDobject=Lee2008_rdd)
> print(reg_nonpara)
### RDD regression: nonparametric local linear###
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Coefficient:
  Estimate Std. Error z value  Pr(>|z|)    
D 0.079924   0.009465  8.4443 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_nonpara)
### RDD regression: nonparametric local linear###
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Weighted Residuals:
     Min       1Q   Median       3Q      Max 
-0.97755 -0.06721 -0.00497  0.04504  0.93761 

	Coefficient:
  Estimate Std. Error z value  Pr(>|z|)    
D 0.079924   0.009465  8.4443 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

	Local R squared: 0.3563 
> plot(x=reg_nonpara)
> 
> reg_nonpara_inflm <- RDDreg_np(RDDobject=Lee2008_rdd, inference="lm")
> print(reg_nonpara_inflm)
### RDD regression: nonparametric local linear###
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Coefficient:
   Estimate Std. Error t value  Pr(>|t|)    
D 0.0799245  0.0068213  11.717 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_nonpara_inflm)
### RDD regression: nonparametric local linear###
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Weighted Residuals:
     Min       1Q   Median       3Q      Max 
-0.97755 -0.06721 -0.00497  0.04504  0.93761 

	Coefficient:
   Estimate Std. Error t value  Pr(>|t|)    
D 0.0799245  0.0068213  11.717 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

	Local R squared: 0.3563 
> plot(x=reg_nonpara_inflm)
> 
> 
> reg_nonpara_sameSl <- RDDreg_np(RDDobject=Lee2008_rdd, slope="same")
> print(reg_nonpara_sameSl)
### RDD regression: nonparametric local linear###
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Coefficient:
  Estimate Std. Error z value  Pr(>|z|)    
D 0.079779   0.009465  8.4289 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> summary(reg_nonpara_sameSl)
### RDD regression: nonparametric local linear###
	Bandwidth:  0.2938561 
	Number of obs: 3200 (left: 1594, right: 1606)

	Weighted Residuals:
     Min       1Q   Median       3Q      Max 
-0.95353 -0.06234  0.00085  0.05138  0.96204 

	Coefficient:
  Estimate Std. Error z value  Pr(>|z|)    
D 0.079779   0.009465  8.4289 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

	Local R squared: 0.3562 
> 
> 
> ###### PLOT SENSI ######
> plSe_reg_para <- plotSensi(reg_para_ik, order=4:6)
> plSe_reg_para_fac <- plotSensi(reg_para_ik, type="facet", order=4:6)
> plSe_reg_para
          bw order       LATE         se       CI_low    CI_high
1  0.1938561     4 0.07247223 0.02382386  0.025778327 0.11916613
2  0.2438561     4 0.04629929 0.02199743  0.003185119 0.08941345
3  0.2938561     4 0.05916354 0.02059588  0.018796358 0.09953073
4  0.3438561     4 0.05275995 0.01937224  0.014791068 0.09072884
5  0.3938561     4 0.05989365 0.01843283  0.023765971 0.09602133
6  0.1938561     5 0.08018637 0.02844931  0.024426748 0.13594599
7  0.2438561     5 0.07228197 0.02645597  0.020429214 0.12413472
8  0.2938561     5 0.04568221 0.02486321 -0.003048781 0.09441320
9  0.3438561     5 0.05146888 0.02340468  0.005596542 0.09734122
10 0.3938561     5 0.04623271 0.02228736  0.002550286 0.08991513
11 0.1938561     6 0.10243475 0.03299585  0.037764063 0.16710544
12 0.2438561     6 0.09506766 0.03067462  0.034946512 0.15518880
13 0.2938561     6 0.08500551 0.02891942  0.028324485 0.14168653
14 0.3438561     6 0.06514312 0.02737691  0.011485362 0.11880089
15 0.3938561     6 0.06054718 0.02609533  0.009401274 0.11169308
> plSe_reg_para_fac
          bw order       LATE         se       CI_low    CI_high
1  0.1938561     4 0.07247223 0.02382386  0.025778327 0.11916613
2  0.2438561     4 0.04629929 0.02199743  0.003185119 0.08941345
3  0.2938561     4 0.05916354 0.02059588  0.018796358 0.09953073
4  0.3438561     4 0.05275995 0.01937224  0.014791068 0.09072884
5  0.3938561     4 0.05989365 0.01843283  0.023765971 0.09602133
6  0.1938561     5 0.08018637 0.02844931  0.024426748 0.13594599
7  0.2438561     5 0.07228197 0.02645597  0.020429214 0.12413472
8  0.2938561     5 0.04568221 0.02486321 -0.003048781 0.09441320
9  0.3438561     5 0.05146888 0.02340468  0.005596542 0.09734122
10 0.3938561     5 0.04623271 0.02228736  0.002550286 0.08991513
11 0.1938561     6 0.10243475 0.03299585  0.037764063 0.16710544
12 0.2438561     6 0.09506766 0.03067462  0.034946512 0.15518880
13 0.2938561     6 0.08500551 0.02891942  0.028324485 0.14168653
14 0.3438561     6 0.06514312 0.02737691  0.011485362 0.11880089
15 0.3938561     6 0.06054718 0.02609533  0.009401274 0.11169308
> 
> 
> plSe_reg_nonpara <- plotSensi(reg_nonpara)
> plSe_reg_nonpara
         bw       LATE          se      p_value     CI_low    CI_high
1 0.1938561 0.07369768 0.010505222 2.293943e-12 0.05310782 0.09428753
2 0.2438561 0.07661912 0.009878428 8.750794e-15 0.05725776 0.09598049
3 0.2938561 0.07992454 0.009464965 3.060030e-17 0.06137355 0.09847553
4 0.3438561 0.08182321 0.009054544 1.614710e-19 0.06407663 0.09956979
5 0.3938561 0.08398642 0.008820583 1.704675e-21 0.06669839 0.10127444
> 
> plSe_reg_nonpara_HC <- plotSensi(reg_nonpara_inflm, vcov. =function(x) vcovCluster(x, clusterVar=model.frame(x)$x))
> plSe_reg_nonpara_HC
         bw       LATE          se      p_value     CI_low    CI_high
1 0.1938561 0.07369768 0.004630858 5.028543e-57 0.06462136 0.08277399
2 0.2438561 0.07661912 0.005058104 7.835161e-52 0.06670542 0.08653283
3 0.2938561 0.07992454 0.005387560 8.698214e-50 0.06936511 0.09048396
4 0.3438561 0.08182321 0.005704170 1.154034e-46 0.07064324 0.09300318
5 0.3938561 0.08398642 0.005899981 5.553777e-46 0.07242267 0.09555017
> 
> plSe_reg_para_0 <- plotSensi(reg_para_0, plot=FALSE)
> plSe_reg_para_0
  bw order       LATE          se     CI_low    CI_high
1 NA     0 0.35135822 0.004195424 0.34313534 0.35958110
2 NA     1 0.11823144 0.005679859 0.10709913 0.12936376
3 NA     2 0.05186868 0.008087038 0.03601838 0.06771898
> 
> plSe_reg_para_0_gg <- plotSensi(reg_para_0, plot=FALSE, output="ggplot")
> str(plSe_reg_para_0_gg)
List of 9
 $ data       :'data.frame':	3 obs. of  6 variables:
  ..$ bw     : num [1:3] NA NA NA
  ..$ order  : num [1:3] 0 1 2
  ..$ LATE   : num [1:3] 0.3514 0.1182 0.0519
  ..$ se     : num [1:3] 0.0042 0.00568 0.00809
  ..$ CI_low : num [1:3] 0.343 0.107 0.036
  ..$ CI_high: num [1:3] 0.3596 0.1294 0.0677
 $ layers     :List of 3
  ..$ :Classes 'proto', 'environment' <environment: 0xd1bbf44> 
  ..$ :Classes 'proto', 'environment' <environment: 0xd1afb70> 
  ..$ :Classes 'proto', 'environment' <environment: 0xd1ea12c> 
 $ scales     :Reference class 'Scales' [package "ggplot2"] with 1 fields
  ..$ scales: list()
  ..and 21 methods, of which 9 are possibly relevant:
  ..  add, clone, find, get_scales, has_scale, initialize, input, n,
  ..  non_position_scales
 $ mapping    :List of 2
  ..$ x: symbol order
  ..$ y: symbol LATE
 $ theme      : list()
 $ coordinates:List of 1
  ..$ limits:List of 2
  .. ..$ x: NULL
  .. ..$ y: NULL
  ..- attr(*, "class")= chr [1:2] "cartesian" "coord"
 $ facet      :List of 1
  ..$ shrink: logi TRUE
  ..- attr(*, "class")= chr [1:2] "null" "facet"
 $ plot_env   :<environment: 0xce7a894> 
 $ labels     :List of 4
  ..$ x   : chr "order"
  ..$ y   : chr "LATE"
  ..$ ymin: chr "CI_low"
  ..$ ymax: chr "CI_high"
 - attr(*, "class")= chr [1:2] "gg" "ggplot"
> 
> 
> ###### Post-inference: ######
> 
> clusterInf(reg_para, clusterVar=model.frame(reg_para)$x, type="df-adj")

t test of coefficients:

             Estimate Std. Error  t value  Pr(>|t|)    
(Intercept) 0.4329479  0.0042758 101.2544 < 2.2e-16 ***
D           0.1182314  0.0056799  20.8159 < 2.2e-16 ***
x           0.2969065  0.0115464  25.7142 < 2.2e-16 ***
x_right     0.0459776  0.0135015   3.4054 0.0006663 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

> clusterInf(reg_para, clusterVar=model.frame(reg_para)$x, type="HC")

t test of coefficients:

            Estimate Std. Error t value  Pr(>|t|)    
(Intercept) 0.432948   0.014242 30.3995 < 2.2e-16 ***
D           0.118231   0.015255  7.7502 1.056e-14 ***
x           0.296906   0.063726  4.6591 3.239e-06 ***
x_right     0.045978   0.066170  0.6948    0.4872    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

> 
> 
> ############################################
> ### STEP 3: Validty tests
> ############################################
> 
> ## Placebo test:
> placeb_dat_reg_nonpara <- computePlacebo(reg_nonpara)
> 
> plotPlacebo(placeb_dat_reg_nonpara)
> plotPlacebo(placeb_dat_reg_nonpara, device="base")
> 
> 
> plotPlaceboDens(placeb_dat_reg_nonpara)
> 
> ## check invisible return:
> ptPl_reg_nonpara <- plotPlacebo(reg_nonpara, plot=FALSE)
> ptPl_reg_nonpara
   cutpoint position         LATE          se      p_value      CI_low
1 -0.403200     left -0.024718935 0.016759674 1.402379e-01 -0.05756729
2 -0.303200     left -0.006342468 0.013352797 6.347928e-01 -0.03251347
3 -0.203200     left -0.002383527 0.012701432 8.511446e-01 -0.02727788
4  0.000000     True  0.079924537 0.009464965 3.060030e-17  0.06137355
5  0.163925    right  0.014895056 0.014567666 3.065567e-01 -0.01365704
6  0.263925    right  0.005435061 0.011726100 6.430052e-01 -0.01754767
7  0.363925    right -0.011887068 0.011410501 2.975203e-01 -0.03425124
8  0.463925    right  0.006736746 0.011407038 5.548032e-01 -0.01562064
9  0.563925    right  0.010152920 0.012815014 4.282047e-01 -0.01496405
      CI_high        bw
1 0.008129422 0.1898052
2 0.019828532 0.1811187
3 0.022510822 0.1432704
4 0.098475528 0.2938561
5 0.043447156 0.1385116
6 0.028417795 0.2901109
7 0.010477102 0.3783845
8 0.029094130 0.4458358
9 0.035269885 0.4358020
> 
> ptPl_reg_nonpara2 <- plotPlacebo(reg_nonpara, plot=FALSE, output="ggplot")
> ptPl_reg_nonpara2
   cutpoint position         LATE          se      p_value      CI_low
1 -0.403200     left -0.024718935 0.016759674 1.402379e-01 -0.05756729
2 -0.303200     left -0.006342468 0.013352797 6.347928e-01 -0.03251347
3 -0.203200     left -0.002383527 0.012701432 8.511446e-01 -0.02727788
4  0.000000     True  0.079924537 0.009464965 3.060030e-17  0.06137355
5  0.163925    right  0.014895056 0.014567666 3.065567e-01 -0.01365704
6  0.263925    right  0.005435061 0.011726100 6.430052e-01 -0.01754767
7  0.363925    right -0.011887068 0.011410501 2.975203e-01 -0.03425124
8  0.463925    right  0.006736746 0.011407038 5.548032e-01 -0.01562064
9  0.563925    right  0.010152920 0.012815014 4.282047e-01 -0.01496405
      CI_high        bw
1 0.008129422 0.1898052
2 0.019828532 0.1811187
3 0.022510822 0.1432704
4 0.098475528 0.2938561
5 0.043447156 0.1385116
6 0.028417795 0.2901109
7 0.010477102 0.3783845
8 0.029094130 0.4458358
9 0.035269885 0.4358020
> 
> # with HC:
> ptPl_reg_nonpara_HC <- plotPlacebo(reg_nonpara_inflm, vcov. =function(x) vcovCluster(x, clusterVar=model.frame(x)$x))
> ptPl_reg_nonpara_HC
   cutpoint position         LATE          se      p_value       CI_low
1 -0.403200     left -0.024718935 0.007273330 6.773866e-04 -0.038974400
2 -0.303200     left -0.006342468 0.007828474 4.178371e-01 -0.021685995
3 -0.203200     left -0.002383527 0.007608807 7.540839e-01 -0.017296515
4  0.000000     True  0.079924537 0.005387560 8.698214e-50  0.069365114
5  0.163925    right  0.014895056 0.005079721 3.365062e-03  0.004938986
6  0.263925    right  0.005435061 0.009521907 5.681383e-01 -0.013227534
7  0.363925    right -0.011887068 0.009213640 1.969952e-01 -0.029945470
8  0.463925    right  0.006736746 0.009332790 4.703951e-01 -0.011555186
9  0.563925    right  0.010152920 0.008135788 2.120555e-01 -0.005792932
       CI_high        bw
1 -0.010463470 0.1898052
2  0.009001058 0.1811187
3  0.012529460 0.1432704
4  0.090483960 0.2938561
5  0.024851125 0.1385116
6  0.024097656 0.2901109
7  0.006171334 0.3783845
8  0.025028678 0.4458358
9  0.026098771 0.4358020
> 
> ptPl_reg_para_0 <- plotPlacebo(reg_para_0)
> ptPl_reg_para_0
   cutpoint position      LATE          se       p_value    CI_low   CI_high bw
1 -0.403200     left 0.1499229 0.005955616 5.847699e-126 0.1382450 0.1616009 NA
2 -0.303200     left 0.1278332 0.005309990 2.549019e-116 0.1174212 0.1382452 NA
3 -0.203200     left 0.1149348 0.005369786  4.164223e-94 0.1044055 0.1254640 NA
4  0.000000     True 0.3513582 0.004195424  0.000000e+00 0.3431338 0.3595826 NA
5  0.163925    right 0.1737790 0.006081606 6.603886e-163 0.1618555 0.1857025 NA
6  0.263925    right 0.1782578 0.005230703 1.806609e-222 0.1680025 0.1885130 NA
7  0.363925    right 0.1858280 0.004966625 2.751855e-261 0.1760905 0.1955655 NA
8  0.463925    right 0.1996953 0.005054746 1.795863e-286 0.1897850 0.2096056 NA
9  0.563925    right 0.2100091 0.005441955 2.277608e-275 0.1993396 0.2206785 NA
> 
> 
> 
> ## density tests
> dens_test(Lee2008_rdd)

	McCrary Test for no discontinuity of density around cutpoint

data:  Lee2008_rdd
z-val = 1.2952, p-value = 0.1952
alternative hypothesis: Density is discontinuous around cutpoint
sample estimates:
Discontinuity 
    0.1035008 

> dens_test(reg_para_0, plot=FALSE)

	McCrary Test for no discontinuity of density around cutpoint

data:  reg_para_0
z-val = 1.2952, p-value = 0.1952
alternative hypothesis: Density is discontinuous around cutpoint
sample estimates:
Discontinuity 
    0.1035008 

> dens_test(reg_nonpara, plot=FALSE)$test.output[c("theta", "se", "z", "p", "binsize", "bw", "cutpoint")]
$theta
[1] 0.1035008

$se
[1] 0.07990827

$z
[1] 1.295245

$p
[1] 0.1952357

$binsize
[1] 0.01124348

$bw
[1] 0.2422787

$cutpoint
[1] 0

> 
> 
> ## Covariates tests
> covarTest_mean(Lee2008_rdd_z)
   mean of x   mean of y   Difference  statistic  p.value  
z1 0.001423447 0.006434915 0.005011469 -0.2005416 0.8410639
z2 20.0026     19.97715    -0.02544849 0.5065413  0.6124957
z3 1.978102    1.989785    0.01168304  -0.5762938 0.5644386
> covarTest_mean(Lee2008_rdd_z, bw=0.1)
   mean of x  mean of y  Difference   statistic  p.value  
z1 0.04586551 0.04336096 -0.002504545 0.04416868 0.9647773
z2 19.9098    20.02098   0.1111845    -0.9421677 0.3462983
z3 1.963605   2.006329   0.04272426   -0.9146029 0.3605844
> covarTest_dis(Lee2008_rdd_z)
   statistic   p.value  
z1 0.02251666  0.3936811
z2 0.02684002  0.2006513
z3 0.007305005 0.9999956
Warning message:
In ks.test(x[regime], x[!regime], exact = exact) :
  p-value will be approximate in the presence of ties
> covarTest_dis(Lee2008_rdd_z, bw=0.1)
   statistic  p.value  
z1 0.03544633 0.8429655
z2 0.04718864 0.512701 
z3 0.02398646 0.9950799
Warning message:
In ks.test(x[regime], x[!regime], exact = exact) :
  p-value will be approximate in the presence of ties
> 
> covarTest_mean(reg_para4_cov)
   mean of x   mean of y   Difference  statistic  p.value  
z1 0.001423447 0.006434915 0.005011469 -0.2005416 0.8410639
z2 20.0026     19.97715    -0.02544849 0.5065413  0.6124957
z3 1.978102    1.989785    0.01168304  -0.5762938 0.5644386
> covarTest_dis(reg_para4_cov)
   statistic   p.value  
z1 0.02251666  0.3936811
z2 0.02684002  0.2006513
z3 0.007305005 0.9999956
Warning message:
In ks.test(x[regime], x[!regime], exact = exact) :
  p-value will be approximate in the presence of ties
> #### as npreg
>   reg_nonpara_np <- as.npreg(reg_nonpara, adjustIK_bw=FALSE)
>   reg_nonpara_np

Regression Data: 6558 training points, and 2 evaluation points, in 3 variable(s)
                      x     D    Dx
Bandwidth(s): 0.2938561 19998 19998

Kernel Regression Estimator: Local-Linear
Bandwidth Type: Fixed

Continuous Kernel Type: Second-Order Gaussian
No. Continuous Explanatory Vars.: 3

>   RDDcoef(reg_nonpara_np)
[1] 0.08329576
>   RDDcoef(reg_nonpara_np, allCo=TRUE)
[1] 0.454912436 0.083295755 0.391398059 0.004460978
>   RDDcoef(reg_nonpara_np, allInfo=TRUE)
    Estimate Std. Error  z value      Pr(>|z|)
D 0.08329576 0.00353085 23.59085 4.784535e-123
>   RDDcoef(reg_nonpara_np, allInfo=TRUE, allCo=TRUE)
               Estimate  Std. Error   z value      Pr(>|z|)
(Intercept) 0.454912436 0.001765425 257.67872  0.000000e+00
D           0.083295755 0.003530850  23.59085 4.784535e-123
x_left      0.391398059 0.003995962  97.94840  0.000000e+00
x_right     0.004460978 0.003995962  97.94840  0.000000e+00
> 
> ## Compare with result obtained with a Gaussian kernel:
>   bw_lm <- dnorm(Lee2008_rdd$x, sd=RDDtools:::getBW(reg_nonpara))
>   reg_nonpara_gaus <- RDDreg_lm(RDDobject=Lee2008_rdd, w=bw_lm)
>   all.equal(RDDcoef(reg_nonpara_gaus, allCo=TRUE),RDDcoef(reg_nonpara_np, allCo=TRUE), check.attributes=FALSE) 
[1] TRUE
> 
> 
> 
> #### methods
> 
> regs_all <- list(reg_para=reg_para,
+                  reg_para_0=reg_para_0,
+                  reg_para4=reg_para4,
+                  reg_para_ik=reg_para_ik,
+                  reg_para_fuzz=reg_para_fuzz,
+                  reg_para4_cov=reg_para4_cov,
+                  reg_para4_cov_slSep=reg_para4_cov_slSep,
+                  reg_para4_cov_startR=reg_para4_cov_startR,
+                  reg_para4_cov_startR_sl2=reg_para4_cov_startR_sl2,
+                  reg_nonpara=reg_nonpara,
+                  reg_nonpara_inflm=reg_nonpara_inflm,
+                  reg_nonpara_sameSl=reg_nonpara_sameSl)
> capply <- function(x){
+   n.obs <- sapply(x, length)
+   seq.max <- seq_len(max(n.obs))
+   t(sapply(x, "[", i = seq.max))
+ }
> 
> capply(lapply(regs_all, coef))
                         (Intercept)           D         x     x_right
reg_para                  0.43294793  0.11823144 0.2969065  0.04597763
reg_para_0                0.34652219  0.35135822        NA          NA
reg_para4                 0.45416747  0.07659014 0.5235953  1.52921601
reg_para_ik               0.46217139  0.05916354 0.5914869 -0.66227641
reg_para_fuzz             0.41796288  0.14755375 0.2977825  0.04266442
reg_para4_cov             0.44599255  0.07641430 0.5274483  1.54394367
reg_para4_cov_slSep       0.44678156  0.07440820 0.5314429  1.56072992
reg_para4_cov_startR     -0.09676677  0.07640039 0.5267323  1.54201574
reg_para4_cov_startR_sl2  0.10814791 -0.27537652 0.5343906  1.57489269
reg_nonpara               0.07992454          NA        NA          NA
reg_nonpara_inflm         0.07992454          NA        NA          NA
reg_nonpara_sameSl        0.07977915          NA        NA          NA
                               <NA>       <NA>       <NA>      <NA>      <NA>
reg_para                         NA         NA         NA        NA        NA
reg_para_0                       NA         NA         NA        NA        NA
reg_para4                  4.220147   3.045197 0.01951445 -2.233991 -2.983991
reg_para_ik              -16.108618 -41.085077 0.31568244 -2.902856 21.503533
reg_para_fuzz                    NA         NA         NA        NA        NA
reg_para4_cov              4.238363   3.052206 0.01540441 -2.246801 -3.005639
reg_para4_cov_slSep        4.259954   3.060466 0.01286431 -2.268298 -3.022976
reg_para4_cov_startR       4.237801   3.053121 0.01757250 -2.251672 -2.994779
reg_para4_cov_startR_sl2   4.282174   3.071545 0.01115439 -2.286510 -3.042340
reg_nonpara                      NA         NA         NA        NA        NA
reg_nonpara_inflm                NA         NA         NA        NA        NA
reg_nonpara_sameSl               NA         NA         NA        NA        NA
                              <NA>          <NA>         <NA>         <NA>
reg_para                        NA            NA           NA           NA
reg_para_0                      NA            NA           NA           NA
reg_para4                -3.775626            NA           NA           NA
reg_para_ik              49.167026            NA           NA           NA
reg_para_fuzz                   NA            NA           NA           NA
reg_para4_cov            -3.780870 -0.0003926535 0.0005546690 -0.004915837
reg_para4_cov_slSep      -3.790047 -0.0019209726 0.0007585763 -0.014431955
reg_para4_cov_startR     -3.786702            NA           NA           NA
reg_para4_cov_startR_sl2 -3.801129            NA           NA           NA
reg_nonpara                     NA            NA           NA           NA
reg_nonpara_inflm               NA            NA           NA           NA
reg_nonpara_sameSl              NA            NA           NA           NA
                                 <NA>        <NA>          <NA>       <NA>
reg_para                           NA          NA            NA         NA
reg_para_0                         NA          NA            NA         NA
reg_para4                          NA          NA            NA         NA
reg_para_ik                        NA          NA            NA         NA
reg_para_fuzz                      NA          NA            NA         NA
reg_para4_cov            -0.003209824          NA            NA         NA
reg_para4_cov_slSep      -0.007679517 0.002584555 -0.0003170247 0.01631598
reg_para4_cov_startR               NA          NA            NA         NA
reg_para4_cov_startR_sl2           NA          NA            NA         NA
reg_nonpara                        NA          NA            NA         NA
reg_nonpara_inflm                  NA          NA            NA         NA
reg_nonpara_sameSl                 NA          NA            NA         NA
                                <NA>
reg_para                          NA
reg_para_0                        NA
reg_para4                         NA
reg_para_ik                       NA
reg_para_fuzz                     NA
reg_para4_cov                     NA
reg_para4_cov_slSep      0.007724786
reg_para4_cov_startR              NA
reg_para4_cov_startR_sl2          NA
reg_nonpara                       NA
reg_nonpara_inflm                 NA
reg_nonpara_sameSl                NA
> sapply(regs_all, RDDcoef)
                reg_para               reg_para_0                reg_para4 
              0.11823144               0.35135822               0.07659014 
             reg_para_ik            reg_para_fuzz            reg_para4_cov 
              0.05916354               0.14755375               0.07641430 
     reg_para4_cov_slSep     reg_para4_cov_startR reg_para4_cov_startR_sl2 
              0.07440820               0.07640039              -0.27537652 
             reg_nonpara        reg_nonpara_inflm       reg_nonpara_sameSl 
              0.07992454               0.07992454               0.07977915 
> RDDpred_issue <- c("reg_para_0", "reg_para_fuzz", "reg_nonpara", "reg_nonpara_sameSl")
> sapply(regs_all[!names(regs_all)%in%RDDpred_issue], RDDpred)
       reg_para    reg_para4  reg_para_ik reg_para4_cov reg_para4_cov_slSep
fit    0.1182314   0.07659014 0.05916354  0.0764143     0.0744082          
se.fit 0.005679859 0.01323924 0.02059588  0.01324397    0.03654137         
       reg_para4_cov_startR reg_para4_cov_startR_sl2 reg_nonpara_inflm
fit    0.07640039           -0.2753765               0.07992454       
se.fit 0.01323793           0.01323405               0.006821266      
> 
> sapply(regs_all, RDDtools:::getCutpoint)
                reg_para               reg_para_0                reg_para4 
                       0                        0                        0 
             reg_para_ik            reg_para_fuzz            reg_para4_cov 
                       0                        0                        0 
     reg_para4_cov_slSep     reg_para4_cov_startR reg_para4_cov_startR_sl2 
                       0                        0                        0 
             reg_nonpara        reg_nonpara_inflm       reg_nonpara_sameSl 
                       0                        0                        0 
> lapply(regs_all, plotSensi, plot=FALSE)
$reg_para
  bw order       LATE          se     CI_low    CI_high
1 NA     0 0.35135822 0.004195424 0.34313534 0.35958110
2 NA     1 0.11823144 0.005679859 0.10709913 0.12936376
3 NA     2 0.05186868 0.008087038 0.03601838 0.06771898
4 NA     3 0.11149993 0.010654624 0.09061725 0.13238261

$reg_para_0
  bw order       LATE          se     CI_low    CI_high
1 NA     0 0.35135822 0.004195424 0.34313534 0.35958110
2 NA     1 0.11823144 0.005679859 0.10709913 0.12936376
3 NA     2 0.05186868 0.008087038 0.03601838 0.06771898

$reg_para4
  bw order       LATE          se     CI_low    CI_high
1 NA     0 0.35135822 0.004195424 0.34313534 0.35958110
2 NA     1 0.11823144 0.005679859 0.10709913 0.12936376
3 NA     2 0.05186868 0.008087038 0.03601838 0.06771898
4 NA     3 0.11149993 0.010654624 0.09061725 0.13238261
5 NA     4 0.07659014 0.013239238 0.05064171 0.10253857
6 NA     5 0.04333404 0.015859294 0.01225039 0.07441768
7 NA     6 0.06722268 0.018524698 0.03091494 0.10353042

$reg_para_ik
          bw order       LATE          se       CI_low    CI_high
1  0.1938561     0 0.16022027 0.004798330  0.150815718 0.16962483
2  0.2438561     0 0.17760973 0.004510194  0.168769917 0.18644955
3  0.2938561     0 0.19564717 0.004321442  0.187177301 0.20411704
4  0.3438561     0 0.21248892 0.004135393  0.204383701 0.22059414
5  0.3938561     0 0.22678759 0.004030799  0.218887370 0.23468781
6  0.1938561     1 0.07701965 0.009222181  0.058944512 0.09509480
7  0.2438561     1 0.08196492 0.008512997  0.065279753 0.09865009
8  0.2938561     1 0.08233778 0.008023551  0.066611911 0.09806365
9  0.3438561     1 0.08638108 0.007597806  0.071489657 0.10127251
10 0.3938561     1 0.08860994 0.007320947  0.074261148 0.10295873
11 0.1938561     2 0.06844548 0.014023370  0.040960175 0.09593078
12 0.2438561     2 0.06854083 0.012874835  0.043306620 0.09377505
13 0.2938561     2 0.07613674 0.012090479  0.052439841 0.09983365
14 0.3438561     2 0.07460742 0.011398876  0.052266039 0.09694881
15 0.3938561     2 0.07653994 0.010899510  0.055177294 0.09790259
16 0.1938561     3 0.04015671 0.018945380  0.003024450 0.07728898
17 0.2438561     3 0.05688732 0.017417241  0.022750156 0.09102449
18 0.2938561     3 0.05385541 0.016296871  0.021914126 0.08579669
19 0.3438561     3 0.06444855 0.015335541  0.034391440 0.09450566
20 0.3938561     3 0.06563911 0.014610684  0.037002693 0.09427552
21 0.1938561     4 0.07247223 0.023823856  0.025778327 0.11916613
22 0.2438561     4 0.04629929 0.021997428  0.003185119 0.08941345
23 0.2938561     4 0.05916354 0.020595882  0.018796358 0.09953073
24 0.3438561     4 0.05275995 0.019372237  0.014791068 0.09072884
25 0.3938561     4 0.05989365 0.018432829  0.023765971 0.09602133
26 0.1938561     5 0.08018637 0.028449309  0.024426748 0.13594599
27 0.2438561     5 0.07228197 0.026455973  0.020429214 0.12413472
28 0.2938561     5 0.04568221 0.024863208 -0.003048781 0.09441320
29 0.3438561     5 0.05146888 0.023404684  0.005596542 0.09734122
30 0.3938561     5 0.04623271 0.022287360  0.002550286 0.08991513
31 0.1938561     6 0.10243475 0.032995854  0.037764063 0.16710544
32 0.2438561     6 0.09506766 0.030674617  0.034946512 0.15518880
33 0.2938561     6 0.08500551 0.028919420  0.028324485 0.14168653
34 0.3438561     6 0.06514312 0.027376913  0.011485362 0.11880089
35 0.3938561     6 0.06054718 0.026095329  0.009401274 0.11169308

$reg_para_fuzz
  bw order      LATE          se    CI_low   CI_high
1 NA     0 0.4355955 0.006528241 0.4228004 0.4483906
2 NA     1 0.1475538 0.007429542 0.1329921 0.1621154
3 NA     2 0.0656055 0.010332691 0.0453538 0.0858572
4 NA     3 0.1404807 0.014040362 0.1129621 0.1679993

$reg_para4_cov
  bw order       LATE          se     CI_low    CI_high
1 NA     0 0.35142357 0.004196158 0.34319925 0.35964788
2 NA     1 0.11827016 0.005681765 0.10713410 0.12940621
3 NA     2 0.05189855 0.008088796 0.03604480 0.06775230
4 NA     3 0.11134675 0.010660840 0.09045189 0.13224161
5 NA     4 0.07641430 0.013243972 0.05045659 0.10237201
6 NA     5 0.04315957 0.015865526 0.01206371 0.07425543
7 NA     6 0.06694689 0.018532763 0.03062334 0.10327044

$reg_para4_cov_slSep
  bw order       LATE         se       CI_low   CI_high
1 NA     0 0.33478449 0.04249791  0.251490112 0.4180789
2 NA     1 0.11802512 0.03533592  0.048767990 0.1872822
3 NA     2 0.05691513 0.03538549 -0.012439161 0.1262694
4 NA     3 0.10861931 0.03581943  0.038414520 0.1788241
5 NA     4 0.07440820 0.03654137  0.002788442 0.1460280
6 NA     5 0.04510758 0.03740477 -0.028204423 0.1184196
7 NA     6 0.06879956 0.03859513 -0.006845514 0.1444446

$reg_para4_cov_startR
  bw order       LATE          se     CI_low    CI_high
1 NA     0 0.35138670 0.004194893 0.34316486 0.35960854
2 NA     1 0.11831288 0.005679290 0.10718168 0.12944409
3 NA     2 0.05190991 0.008086098 0.03606145 0.06775837
4 NA     3 0.11141562 0.010653686 0.09053478 0.13229646
5 NA     4 0.07640039 0.013237935 0.05045452 0.10234627
6 NA     5 0.04317996 0.015857875 0.01209909 0.07426082
7 NA     6 0.06694821 0.018523221 0.03064337 0.10325306

$reg_para4_cov_startR_sl2
  bw order          LATE          se       CI_low      CI_high
1 NA     0 -6.185850e-19 0.004193136 -0.008218395  0.008218395
2 NA     1 -2.329820e-01 0.005676838 -0.244108359 -0.221855561
3 NA     2 -2.992057e-01 0.008083027 -0.315048158 -0.283363275
4 NA     3 -2.402482e-01 0.010650758 -0.261123335 -0.219373129
5 NA     4 -2.753765e-01 0.013234053 -0.301314786 -0.249438251
6 NA     5 -3.078751e-01 0.015854218 -0.338948842 -0.276801448
7 NA     6 -2.843114e-01 0.018519301 -0.320608600 -0.248014273

$reg_nonpara
         bw       LATE          se      p_value     CI_low    CI_high
1 0.1938561 0.07369768 0.010505222 2.293943e-12 0.05310782 0.09428753
2 0.2438561 0.07661912 0.009878428 8.750794e-15 0.05725776 0.09598049
3 0.2938561 0.07992454 0.009464965 3.060030e-17 0.06137355 0.09847553
4 0.3438561 0.08182321 0.009054544 1.614710e-19 0.06407663 0.09956979
5 0.3938561 0.08398642 0.008820583 1.704675e-21 0.06669839 0.10127444

$reg_nonpara_inflm
         bw       LATE          se      p_value     CI_low    CI_high
1 0.1938561 0.07369768 0.008226172 6.804965e-19 0.05757468 0.08982068
2 0.2438561 0.07661912 0.007390799 1.010948e-24 0.06213342 0.09110482
3 0.2938561 0.07992454 0.006821266 4.467779e-31 0.06655510 0.09329397
4 0.3438561 0.08182321 0.006393962 1.014472e-36 0.06929127 0.09435515
5 0.3938561 0.08398642 0.006131746 8.631145e-42 0.07196841 0.09600442

$reg_nonpara_sameSl
         bw       LATE          se      p_value     CI_low    CI_high
1 0.1938561 0.07367558 0.010505222 2.328712e-12 0.05308572 0.09426543
2 0.2438561 0.07652761 0.009878428 9.413189e-15 0.05716625 0.09588898
3 0.2938561 0.07977915 0.009464965 3.489595e-17 0.06122816 0.09833014
4 0.3438561 0.08161463 0.009054544 1.992826e-19 0.06386805 0.09936121
5 0.3938561 0.08370026 0.008820583 2.328193e-21 0.06641223 0.10098828

> 
> sapply(regs_all, function(x) dens_test(x, plot=FALSE)[c("p.value", "statistic", "estimate")])
          reg_para  reg_para_0 reg_para4 reg_para_ik reg_para_fuzz
p.value   0.1952357 0.1952357  0.1952357 0.1952357   0.1952357    
statistic 1.295245  1.295245   1.295245  1.295245    1.295245     
estimate  0.1035008 0.1035008  0.1035008 0.1035008   0.1035008    
          reg_para4_cov reg_para4_cov_slSep reg_para4_cov_startR
p.value   0.1952357     0.1952357           0.1952357           
statistic 1.295245      1.295245            1.295245            
estimate  0.1035008     0.1035008           0.1035008           
          reg_para4_cov_startR_sl2 reg_nonpara reg_nonpara_inflm
p.value   0.1952357                0.1952357   0.1952357        
statistic 1.295245                 1.295245    1.295245         
estimate  0.1035008                0.1035008   0.1035008        
          reg_nonpara_sameSl
p.value   0.1952357         
statistic 1.295245          
estimate  0.1035008         
> 
> 
> proc.time()
utilisateur     système      écoulé 
     11.760       0.304      12.503 
