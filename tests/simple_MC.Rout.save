
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(RDDtools)
Loading required package: AER
Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: sandwich
Loading required package: survival
Loading required package: splines
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009

RDDtools 0.22
PLEASE NOTE THIS is currently only a development version. 
Run vignette('RDDtools') for the documentation
> library(rdd)
Loading required package: Formula
> 
> ## simple MC:
> set.seed(123)
> 
> MC_simple <- function(n=200, CATE=0.3, HATE=0.1){
+   x <- rnorm(n, mean=20, sd=5)
+   D <- x>= 20
+   y <- 0.8 + CATE*D+ 0.3*x+HATE*x*D+rnorm(n, sd=0.1)
+   cat("effect", CATE+HATE*20, "\n")
+   RDDdata(x=x, y=y, cutpoint=20)
+ 
+ }
> 
> input_mc <- MC_simple(n=1000, CATE=0.4)
effect 2.4 
> plot(input_mc)
> 
> RDD_bw <- RDDbw_IK(input_mc)
> 
> RDD_np_sep <- RDDreg_np(input_mc, bw=RDD_bw)
> RDD_np_same <- RDDreg_np(input_mc, slope="same", bw=RDD_bw)
> RDD_np_sep_inflm <- RDDreg_np(input_mc, bw=RDD_bw, inf="lm")
> RDD_np_same_inflm <- RDDreg_np(input_mc, slope="same", bw=RDD_bw, inf="lm")
> RDD_lm_sep <- RDDreg_lm(input_mc, bw=RDD_bw)
> RDD_lm_same <- RDDreg_lm(input_mc, slope="same", bw=RDD_bw)
> rdd_RDe <- RDestimate(y~x, data=input_mc, cutpoint=20, model=TRUE, bw=RDD_bw)
> 
> 
> printCoefmat(coef(summary(RDD_np_sep_inflm$RDDslot$model)))
             Estimate Std. Error t value  Pr(>|t|)    
(Intercept) 6.7943125  0.0074768 908.722 < 2.2e-16 ***
D           2.4175554  0.0106230 227.578 < 2.2e-16 ***
x           0.2984534  0.0022980 129.876 < 2.2e-16 ***
x_right     0.1007346  0.0032831  30.683 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> printCoefmat(coef(summary(RDD_np_same_inflm$RDDslot$model)))
             Estimate Std. Error t value  Pr(>|t|)    
(Intercept) 6.9205374  0.0088024  786.21 < 2.2e-16 ***
D           2.4225702  0.0149756  161.77 < 2.2e-16 ***
x           0.3478051  0.0023140  150.31 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> printCoefmat(coef(summary(RDD_lm_sep)))
             Estimate Std. Error t value  Pr(>|t|)    
(Intercept) 6.7962504  0.0079252 857.552 < 2.2e-16 ***
D           2.4109453  0.0112070 215.129 < 2.2e-16 ***
x           0.2992111  0.0017938 166.802 < 2.2e-16 ***
x_right     0.1018062  0.0025548  39.849 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> printCoefmat(coef(summary(RDD_lm_same)))
             Estimate Std. Error t value  Pr(>|t|)    
(Intercept) 6.9762180  0.0106354  655.95 < 2.2e-16 ***
D           2.4137377  0.0183016  131.89 < 2.2e-16 ***
x           0.3494005  0.0020859  167.51 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> printCoefmat(coef(summary(rdd_RDe $model[[1]])))
             Estimate Std. Error t value  Pr(>|t|)    
(Intercept) 6.7943125  0.0074768  908.72 < 2.2e-16 ***
Tr          2.4175554  0.0106230  227.58 < 2.2e-16 ***
Xl          0.2984534  0.0022980  129.88 < 2.2e-16 ***
Xr          0.3991880  0.0023448  170.24 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 
> 
> 
> ## few checks:
> plse <- plotSensi(RDD_np_sep, from=5, to=20, by=0.5)
> plotPlacebo(RDD_np_sep)
> 
> plotSensi(RDD_np_same, from=5, to=20, by=0.5)
> plotPlacebo(RDD_np_same)
> 
> a<-plotSensi(RDD_lm_sep, from=5, to=20, by=0.5)
> plotPlacebo(RDD_lm_sep)
> 
> plotSensi(RDD_lm_same, from=5, to=20, by=0.5)
> plotPlacebo(RDD_lm_same)
> 
> #### Other MCs:
> set.seed(123)
> head(gen_MC_IK())
           x         y
1 -0.5604223 0.0192401
2 -0.4325322 0.2071696
3  0.4824464 0.8091620
4 -0.3013330 0.4993961
5 -0.2740911 0.4570206
6 -0.1112708 0.3558237
> 
> set.seed(123)
> head(gen_MC_IK(output="RDDdata"))
           x         y
1 -0.5604223 0.0192401
2 -0.4325322 0.2071696
3  0.4824464 0.8091620
4 -0.3013330 0.4993961
5 -0.2740911 0.4570206
6 -0.1112708 0.3558237
> 
> set.seed(123)
> head(gen_MC_IK(version=2))
           x            y
1 -0.5604223  0.775848845
2 -0.4325322  0.486922823
3  0.4824464  1.011047103
4 -0.3013330  0.416130145
5 -0.2740911  0.317010484
6 -0.1112708 -0.009950054
> 
> set.seed(123)
> head(gen_MC_IK(version=3))
           x          y
1 -0.5604223 -3.6512588
2 -0.4325322 -1.5947076
3  0.4824464  0.8091620
4 -0.3013330 -0.2635494
5 -0.2740911 -0.1648652
6 -0.1112708  0.2298459
> 
> set.seed(123)
> head(gen_MC_IK(version=4))
           x            y
1 -0.5604223 -2.709039228
2 -0.4325322 -1.033455253
3  0.4824464  1.507425459
4 -0.3013330  0.008855458
5 -0.2740911  0.060512581
6 -0.1112708  0.266989475
> 
> proc.time()
utilisateur     système      écoulé 
       1.23        0.07        1.46 
