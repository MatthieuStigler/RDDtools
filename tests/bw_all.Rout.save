
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(rddtools)
Loading required package: AER
Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Loading required package: sandwich
Loading required package: survival
Loading required package: np
Nonparametric Kernel Methods for Mixed Datatypes (version 0.60-6)
[vignette("np_faq",package="np") provides answers to frequently asked questions]
[vignette("np",package="np") an overview]
[vignette("entropy_np",package="np") an overview of entropy-based methods]
> 
> # load the example data set
> data(house)
> 
> # create rdd_data sets
> rd_dat <- rdd_data(x=x, y=y, data=house, cutpoint=0)
> reg_lm <- rdd_reg_lm(rd_dat)
> reg_np <- rdd_reg_np(rd_dat)
> reg_dat <- list(rd=rd_dat, reg_np=reg_np)
> 
> ## plots
> plot(rd_dat)
Warning messages:
1: In title(main = main, sub = sub) : font width unknown for character 0x9
2: In title(main = main, sub = sub) : font width unknown for character 0x9
> plot(reg_np)
Warning messages:
1: In title(main = main, sub = sub) : font width unknown for character 0x9
2: In title(main = main, sub = sub) : font width unknown for character 0x9
> plot(reg_lm)
Warning messages:
1: In title(main = main, sub = sub) : font width unknown for character 0x9
2: In title(main = main, sub = sub) : font width unknown for character 0x9
> 
> ## IK
> mapply(function(kernel) rdd_bw_ik(rd_dat, kernel=kernel), kernel = c("Triangular", "Uniform", "Normal"))
Triangular.h_opt    Uniform.h_opt     Normal.h_opt 
       0.2938561        0.2309748        0.1075954 
> 
> ## CCT estim
> rdd_bw_cct_estim_ARG_1 <-  c("mserd", "msetwo", "msesum", "msecomb1", "msecomb2",
+                              "cerrd", "certwo", "cersum", "cercomb1")
> rdd_bw_cct_estim_ARG_2 <-  c("Triangular", "Uniform", "Epanechnikov")
> mapply(function(arg1, arg2) rdd_bw_cct_estim(rd_dat, method=arg1, kernel=arg2)$bws, 
+        arg1 = rdd_bw_cct_estim_ARG_1,
+        arg2 = rdd_bw_cct_estim_ARG_2)
         mserd    msetwo    msesum  msecomb1  msecomb2     cerrd     certwo
[1,] 0.1335798 0.1268747 0.1549915 0.1335798 0.1335798 0.0860800 0.08175915
[2,] 0.1335798 0.1908366 0.1549915 0.1335798 0.1549915 0.0860800 0.12297680
[3,] 0.2379239 0.2149461 0.2354573 0.2354573 0.2354573 0.2379239 0.21494611
[4,] 0.2379239 0.3081993 0.2354573 0.2354573 0.2379239 0.2379239 0.30819933
        cersum  cercomb1
[1,] 0.0998779 0.0860800
[2,] 0.0998779 0.0860800
[3,] 0.2354573 0.2354573
[4,] 0.2354573 0.2354573
> 
> ## CCT plot
> rdd_bw_cct_plot_ARG_1 <-  c("esmv", "es", "espr", "esmvpr", 
+                              "qs", "qspr", "qsmv", "qsmvpr")
> mapply(function(arg1) rdd_bw_cct_plot(rd_dat, method=arg1), 
+        arg1 = rdd_bw_cct_plot_ARG_1, SIMPLIFY=FALSE)
$esmv
Call: rdplot

Number of Obs.                 6558
Kernel                      Uniform

Number of Obs.                2740           3818
Eff. Number of Obs.           2740           3818
Order poly. fit (p)              4              4
BW poly. fit (h)             1.000          1.000
Number of bins scale             1              1


$es
Call: rdplot

Number of Obs.                 6558
Kernel                      Uniform

Number of Obs.                2740           3818
Eff. Number of Obs.           2740           3818
Order poly. fit (p)              4              4
BW poly. fit (h)             1.000          1.000
Number of bins scale             1              1


$espr
Call: rdplot

Number of Obs.                 6558
Kernel                      Uniform

Number of Obs.                2740           3818
Eff. Number of Obs.           2740           3818
Order poly. fit (p)              4              4
BW poly. fit (h)             1.000          1.000
Number of bins scale             1              1


$esmvpr
Call: rdplot

Number of Obs.                 6558
Kernel                      Uniform

Number of Obs.                2740           3818
Eff. Number of Obs.           2740           3818
Order poly. fit (p)              4              4
BW poly. fit (h)             1.000          1.000
Number of bins scale             1              1


$qs
Call: rdplot

Number of Obs.                 6558
Kernel                      Uniform

Number of Obs.                2740           3818
Eff. Number of Obs.           2740           3818
Order poly. fit (p)              4              4
BW poly. fit (h)             1.000          1.000
Number of bins scale             1              1


$qspr
Call: rdplot

Number of Obs.                 6558
Kernel                      Uniform

Number of Obs.                2740           3818
Eff. Number of Obs.           2740           3818
Order poly. fit (p)              4              4
BW poly. fit (h)             1.000          1.000
Number of bins scale             1              1


$qsmv
Call: rdplot

Number of Obs.                 6558
Kernel                      Uniform

Number of Obs.                2740           3818
Eff. Number of Obs.           2740           3818
Order poly. fit (p)              4              4
BW poly. fit (h)             1.000          1.000
Number of bins scale             1              1


$qsmvpr
Call: rdplot

Number of Obs.                 6558
Kernel                      Uniform

Number of Obs.                2740           3818
Eff. Number of Obs.           2740           3818
Order poly. fit (p)              4              4
BW poly. fit (h)             1.000          1.000
Number of bins scale             1              1


> 
> ## rsw 
> rdd_bw_rsw_ARG_1 <- c("global", "sided")
> mapply(function(arg1) rdd_bw_rsw(rd_dat, type=arg1), 
+        arg1 = rdd_bw_rsw_ARG_1)
$global
[1] 0.03863514

$sided
[1] 0.03454186 0.10109994

> 
> 
> 
> proc.time()
   user  system elapsed 
  7.800   0.088   7.881 
